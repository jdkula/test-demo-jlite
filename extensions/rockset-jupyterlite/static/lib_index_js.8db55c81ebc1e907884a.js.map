{"version":3,"file":"lib_index_js.8db55c81ebc1e907884a.js","mappings":"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","sources":["webpack://rockset-jupyterlite/./src/api.ts","webpack://rockset-jupyterlite/./src/index.ts","webpack://rockset-jupyterlite/./src/util.ts"],"sourcesContent":["import type { Contents } from '@jupyterlab/services/lib/contents';\nimport {\n  createSkeleton,\n  getAllNotebooks,\n  saveAndCloseAll,\n  setDocument\n} from './util';\nimport { IDocumentManager } from '@jupyterlab/docmanager';\nimport { ILabShell } from '@jupyterlab/application';\nimport { INotebookContent } from '@jupyterlab/nbformat/lib/index';\n\ninterface IApiMessage {\n  destination: 'host' | 'child';\n}\n\nexport interface IApiRequest extends IApiMessage {\n  type: 'rs-req';\n  fn: string;\n  args: Array<any>;\n  nonce: number;\n}\n\nexport interface IApiResponse extends IApiMessage {\n  type: 'rs-res';\n  error: boolean;\n  data: any;\n  nonce: number;\n}\n\nexport interface IApiPing extends IApiMessage {\n  type: 'rs-ping';\n}\n\nexport interface IApiPong extends IApiMessage {\n  type: 'rs-pong';\n}\n\nexport class ApiMessenger {\n  private readonly resolutions_: Map<\n    number,\n    { resolve: (ret: any) => void; reject: (err: any) => void }\n  >;\n\n  private readonly waiting_: Array<IApiRequest>;\n\n  private ready_ = false;\n  private shuttingDown_ = false;\n  private onFinish_: (() => void) | null = null;\n  private nonce_ = 0;\n\n  private iam_: 'child' | 'host';\n  private destination_: 'child' | 'host';\n  private responseHandler_: ((fn: string, ...args: any[]) => any) | null;\n  private window_: Window;\n\n  constructor(\n    iam: ApiMessenger['iam_'],\n    responseHandler?: ApiMessenger['responseHandler_']\n  ) {\n    this.iam_ = iam;\n    this.responseHandler_ = responseHandler ?? null;\n    this.destination_ = iam === 'child' ? 'host' : 'child';\n    this.window_ = iam === 'child' ? window.parent : window.frames[0];\n    this.handler_ = this.handler_.bind(this);\n    this.waiting_ = [];\n    this.resolutions_ = new Map();\n    window.addEventListener('message', this.handler_);\n    this.doSend_({ type: 'rs-ping', destination: this.destination_ });\n  }\n\n  get ready() {\n    return this.ready_;\n  }\n\n  destroy() {\n    this.shuttingDown_ = true;\n    if (this.resolutions_.size == 0) {\n      window.removeEventListener('message', this.handler_);\n    } else {\n      this.onFinish_ = () =>\n        window.removeEventListener('message', this.handler_);\n    }\n  }\n\n  private onReady() {\n    this.ready_ = true;\n    for (const req of this.waiting_) {\n      this.doSend_(req);\n    }\n    this.waiting_.splice(0, this.waiting_.length);\n  }\n\n  private async handler_(\n    e: MessageEvent<IApiPong | IApiResponse | IApiPing | IApiRequest>\n  ) {\n    if (e.data?.destination !== this.iam_) {\n      return;\n    }\n    console.log(this.iam_, 'HANDLED', e);\n\n    switch (e.data.type) {\n      case 'rs-res':\n        const resolution = this.resolutions_.get(e.data.nonce);\n        if (!resolution) break;\n\n        if (e.data.error) {\n          resolution.reject(e.data.data);\n        } else {\n          resolution.resolve(e.data.data);\n        }\n        this.resolutions_.delete(e.data.nonce);\n        break;\n      case 'rs-pong':\n        this.onReady();\n        break;\n      case 'rs-ping':\n        this.doSend_({ type: 'rs-pong', destination: this.destination_ });\n        break;\n      case 'rs-req':\n        try {\n          const result = await this.responseHandler_?.(\n            e.data.fn,\n            ...e.data.args\n          );\n          this.doSend_({\n            type: 'rs-res',\n            data: result,\n            destination: this.destination_,\n            error: false,\n            nonce: e.data.nonce\n          });\n        } catch (ex) {\n          this.doSend_({\n            type: 'rs-res',\n            data: String(ex),\n            destination: this.destination_,\n            error: true,\n            nonce: e.data.nonce\n          });\n        }\n        break;\n    }\n    if (this.resolutions_.size === 0 && this.onFinish_ !== null) {\n      this.onFinish_();\n    }\n  }\n\n  private doSend_(msg: IApiPing | IApiRequest | IApiResponse | IApiPong) {\n    console.log(this.iam_, 'SENDING', msg);\n    this.window_?.postMessage(msg, '*');\n  }\n\n  sendPing() {\n    this.doSend_({ type: 'rs-ping', destination: this.destination_ });\n  }\n\n  async send(\n    msg: Omit<IApiRequest, 'nonce' | 'type' | 'destination'>\n  ): Promise<any> {\n    if (this.shuttingDown_) {\n      throw new Error('Messenger is shutting down...');\n    }\n    const full: IApiRequest = {\n      ...msg,\n      nonce: this.nonce_++,\n      type: 'rs-req',\n      destination: this.destination_\n    };\n    const prom = new Promise<any>((resolve, reject) => {\n      this.resolutions_.set(full.nonce, { resolve, reject });\n    });\n    if (!this.ready) {\n      this.waiting_.push(full);\n    } else {\n      this.doSend_(full);\n    }\n\n    return prom;\n  }\n}\n\nexport class JupyterResponseHandler {\n  constructor(\n    private contents_: Contents.IManager,\n    private docs_: IDocumentManager,\n    private lab_: ILabShell\n  ) {}\n\n  handler = async (fn: string, ...args: any[]): Promise<any> => {\n    if (!(fn in this)) {\n      throw new Error(`${fn} is not a valid function.`);\n    }\n    return await (this as any)[fn](...args);\n  };\n\n  async getAllNotebooks() {\n    return await getAllNotebooks(this.contents_);\n  }\n\n  async setupNotebook(nb: Array<string>): Promise<void>;\n  async setupNotebook(nb: INotebookContent): Promise<void>;\n  async setupNotebook(nb: INotebookContent | Array<string>): Promise<void> {\n    await saveAndCloseAll(this.lab_, this.docs_);\n    if (Array.isArray(nb)) {\n      await createSkeleton(this.docs_, nb);\n    } else {\n      await setDocument(this.docs_, nb);\n    }\n  }\n}\n","import {\n  ILabShell,\n  JupyterFrontEnd,\n  JupyterFrontEndPlugin\n} from '@jupyterlab/application';\nimport { IDocumentManager } from '@jupyterlab/docmanager';\nimport { ILauncher } from '@jupyterlab/launcher';\nimport { ApiMessenger, JupyterResponseHandler } from './api';\nimport { ToolbarButton } from '@jupyterlab/ui-components';\nimport { DocumentRegistry } from '@jupyterlab/docregistry';\nimport { INotebookModel, NotebookPanel } from '@jupyterlab/notebook';\nimport { IDisposable } from '@lumino/disposable';\n\n/**\n * Initialization data for the rockset-jupyterlite extension.\n */\nconst plugin: JupyterFrontEndPlugin<void> = {\n  id: 'rockset-jupyterlite:plugin',\n  description: 'A JupyterLab extension.',\n  autoStart: true,\n  optional: [ILauncher],\n  requires: [IDocumentManager, ILabShell],\n  activate: (\n    app: JupyterFrontEnd,\n    docs: IDocumentManager,\n    lab: ILabShell,\n    launcher?: ILauncher\n  ) => {\n    let nonce = 1;\n\n    setTimeout(async () => {\n      lab.collapseLeft();\n      lab.collapseRight();\n\n      const h = new JupyterResponseHandler(docs.services.contents, docs, lab);\n      const msg = new ApiMessenger('child', h.handler);\n      function addLauncherTemplate({\n        makeCells,\n        name,\n        description\n      }: {\n        makeCells: (region: string, key: string) => string[];\n        name: string;\n        description: string;\n      }) {\n        const cmd = `rockset:open-${nonce++}`;\n        app.commands.addCommand(cmd, {\n          caption: description,\n          label: name,\n          execute: async () => {\n            const region = await msg.send({ fn: 'getRegion', args: [] });\n            const key = await msg.send({ fn: 'getApiKey', args: [] });\n            if (!key) {\n              return;\n            } else {\n              await h.setupNotebook(makeCells(region, key));\n            }\n          }\n        });\n\n        launcher?.add({\n          args: { isLauncher: true, kernelName: 'template' },\n          command: cmd,\n          category: 'Notebook',\n          rank: nonce\n        });\n      }\n\n      const css = document.createElement('style');\n      css.innerHTML = `\n      .jp-nb-interface-switcher-button {\n        display: none !important;\n      }\n      div:has(> button[data-command=\"notebook:restart-run-all\"]) {\n        display: none !important;\n      }\n      `;\n      document.body.appendChild(css);\n\n      addLauncherTemplate({\n        name: 'Notebook with Rockset Client',\n        description: 'Initialize new notebook with Rockset API Key',\n        makeCells: (region, key) => [\n          `import rockset\nimport pandas as pd`,\n          `client = rockset.RocksetClient('${region}', '${key}')`,\n          `def query(sql):\n    return pd.DataFrame(client.Queries.query(sql={\"query\": sql})['results'])`,\n          `query(\"\"\"\nSELECT 1 as Column -- Your SQL Here\n\"\"\")`\n        ]\n      });\n\n      addLauncherTemplate({\n        name: 'Create a bar chart from data with Rockset',\n        description: 'Create a bar chart with data from Rockset',\n        makeCells: (region, key) => [\n          `import rockset\nimport pandas as pd\nimport matplotlib.pyplot as plt`,\n          `client = rockset.RocksetClient('${region}', '${key}')`,\n          `## SET YOUR PARAMETERS HERE ##\nQUERY_LAMBDA_WORKSPACE=\"commons\"\nQUERY_LAMBDA_NAME=\"your_ql_name\"\nQUERY_LAMBDA_TAG=\"latest\"\n\n# If \"None\", you'll be prompted dynamically using the data in the collection\nLABEL_FIELD=None\nVALUE_FIELD=None`,\n          `def query_ql(*, name, workspace='commons', tag='latest'):\n    return client.QueryLambdas.execute_query_lambda_by_tag(\n        query_lambda=name,\n        workspace=workspace,\n        tag=tag\n    )['results']`,\n          `async def choose_label_field(data):\n    options = list({\n        key\n        for datum in data\n        for key in datum.keys()\n        if type(datum[key]) == str\n    })\n    if len(options) == 0:\n        raise Exception(\"No valid label fields\")\n    if len(options) == 1:\n        return options[0]\n    for i, option in enumerate(options):\n        print(f\"[{i}] - {option}\")\n    return options[int(await input(\"Choose the number of the field you want to use as a label: \"))]\n\nasync def choose_value_field(data):\n    options = list({\n        key\n        for datum in data\n        for key in datum.keys()\n        if type(datum[key]) == float or type(datum[key]) == int\n    })\n    if len(options) == 0:\n        raise Exception(\"No valid label fields\")\n    if len(options) == 1:\n        return options[0]\n    for i, option in enumerate(options):\n        print(f\"[{i}] - {option}\")\n    return options[int(await input(\"Choose the number of the field you want to use as a value: \"))]`,\n          `def create_bar_chart(data, label_field, value_field):\n    pairs = {\n        datum[label_field]: datum[value_field]\n        for datum in data\n        if label_field in datum and\n            value_field in datum and\n            type(datum[label_field]) == str and\n            (type(datum[value_field]) == float or type(datum[value_field]) == int)\n    }\n    fig = plt.figure()\n    plt.bar(list(pairs.keys()), list(pairs.values()))\n    plt.xticks(rotation=65)\n    plt.xlabel(label_field)\n    plt.ylabel(value_field)\n    plt.show()`,\n          `data = query_ql(\n    name=QUERY_LAMBDA_NAME,\n    workspace=QUERY_LAMBDA_WORKSPACE,\n    tag=QUERY_LAMBDA_TAG\n)`,\n          `label_field = LABEL_FIELD if LABEL_FIELD is not None else await choose_label_field(data)`,\n          `value_field = VALUE_FIELD if VALUE_FIELD is not None else await choose_value_field(data)`,\n          `create_bar_chart(\n    data,\n    label_field,\n    value_field\n)`\n        ]\n      });\n\n      app.docRegistry.addWidgetExtension('Notebook', new ButtonExtension(app));\n    }, 0);\n  }\n};\n\nexport class ButtonExtension\n  implements DocumentRegistry.IWidgetExtension<NotebookPanel, INotebookModel>\n{\n  constructor(private app_: JupyterFrontEnd) {}\n\n  createNew(\n    panel: NotebookPanel,\n    context: DocumentRegistry.IContext<INotebookModel>\n  ): IDisposable {\n    const btn = new ToolbarButton({\n      label: 'Run All Cells',\n      onClick: () => this.app_.commands.execute('notebook:run-all-cells')\n    });\n    panel.toolbar.insertItem(10, 'runAllCells', btn);\n    return btn;\n  }\n}\n\nexport default plugin;\n","import { ILabShell } from '@jupyterlab/application';\nimport { IDocumentManager } from '@jupyterlab/docmanager';\nimport { Notebook } from '@jupyterlab/notebook';\nimport type { Contents } from '@jupyterlab/services/lib/contents';\nimport { INotebookContent } from '@jupyterlab/nbformat/lib/index';\n\nexport interface INotebookFile {\n  path: string;\n  contents: string;\n}\n\nexport async function getAllNotebooks(\n  contents: Contents.IManager,\n  folder = '',\n  exploredPaths?: Set<string>\n): Promise<INotebookFile[]> {\n  exploredPaths = exploredPaths ?? new Set<string>();\n  const data = await contents.get(folder);\n  let notebooks: INotebookFile[] = [];\n  for (const el of data.content as Contents.IModel[]) {\n    const path = (folder + '/' + el.name).replace(/^\\//, '');\n    if (exploredPaths.has(path) || /node_modules/g.test(path)) {\n      continue;\n    }\n    console.log('Explored', exploredPaths.size, 'paths');\n    exploredPaths.add(path);\n\n    if (el.type === 'directory') {\n      notebooks = notebooks.concat(\n        await getAllNotebooks(contents, path, exploredPaths)\n      );\n    } else if (el.type === 'notebook') {\n      const nb = await contents.get(path, { content: true });\n      notebooks.push({\n        path,\n        contents: nb.content\n      });\n    }\n  }\n  return notebooks;\n}\n\nexport async function saveAndCloseAll(lab: ILabShell, docs: IDocumentManager) {\n  const promises: Array<Promise<void>> = [];\n  for (const w of lab.widgets('main')) {\n    const ctx = docs.contextForWidget(w);\n    if (!ctx) {\n      continue;\n    }\n    promises.push(ctx.save().catch(e => /* ignore 😃 */ void e));\n  }\n  await Promise.all(promises);\n  lab.closeAll();\n}\n\nexport async function createSkeleton(\n  docs: IDocumentManager,\n  starter: string[]\n) {\n  try {\n    await docs.deleteFile('test.ipynb');\n  } catch (e) {\n    console.log(\"it probably didn't exist or something\", e);\n  }\n  const doc = await docs.newUntitled({ type: 'notebook', ext: 'ipynb' });\n  const widget = await docs.openOrReveal(doc.path, 'notebook');\n  if (!widget) throw new Error('!!!');\n\n  widget.isUntitled = true;\n  await widget.context.ready;\n  const nb = widget.content as Notebook;\n\n  for (let i = 0; i < starter.length; i++) {\n    nb.model?.sharedModel.insertCell(i, {\n      cell_type: 'code',\n      source: starter[i].trim()\n    });\n  }\n  await widget.context.ready;\n}\n\nexport async function setDocument(\n  docs: IDocumentManager,\n  content: INotebookContent\n) {\n  try {\n    await docs.deleteFile('test.ipynb');\n  } catch (e) {\n    console.log(\"it probably didn't exist or something\", e);\n  }\n  const nb = (docs.createNew('test.ipynb') as any)?.content as Notebook;\n  nb.model?.sharedModel.fromJSON(content);\n}\n"],"names":[],"sourceRoot":""}